*code-bridge.txt*    Neovim plugin for coding agent integration via tmux

Author: Samir Roy
License: GPL v2

==============================================================================
CONTENTS                                                  *code-bridge-contents*

1. Introduction ................................. |code-bridge-introduction|
2. Requirements ................................. |code-bridge-requirements|
3. Installation ................................. |code-bridge-installation|
4. Commands ..................................... |code-bridge-commands|
5. Configuration ................................ |code-bridge-configuration|

==============================================================================
INTRODUCTION                                          *code-bridge-introduction*

code-bridge.nvim sends file context from Neovim to a coding agent
running in another tmux window. It emits compact markers like
"@path/to/file" or "@path/to/file#L10-20" and can also send git diffs.

==============================================================================
REQUIREMENTS                                          *code-bridge-requirements*

- Neovim 0.7+
- tmux (to target your agent window)
- An agent process running in tmux (e.g. claude, codex, gemini, qwen)

==============================================================================
INSTALLATION                                          *code-bridge-installation*

Using lazy.nvim: >
    {
      "samir-roy/code-bridge.nvim",
      config = function()
        require('code-bridge').setup()
      end
    }
<

==============================================================================
COMMANDS                                                  *code-bridge-commands*

                                                          *:CodeBridgeAddContext*
:CodeBridgeAddContext           Send current file or selected range as context.
                                Shows a brief success notification like
                                "added context to <provider>".

                                                          *:CodeBridgeDiff*
:CodeBridgeDiff                 Send current git changes (unstaged), using
                                output of `git diff HEAD`.

                                                          *:CodeBridgeDiffStaged*
:CodeBridgeDiffStaged           Send staged changes only, using output of
                                `git diff --cached`.

                                                          *:CodeBridgeUse*
:CodeBridgeUse {provider}       Switch the active provider (e.g. `claude`,
                                `codex`, `gemini`, `qwen`). Autocompletes common
                                provider names.

Context format:
- Normal mode: @filename.ext
- Visual mode: @filename.ext#Lstart-Lend

==============================================================================
CONFIGURATION                                        *code-bridge-configuration*

Example: >
    require('code-bridge').setup({
      provider = 'claude',
      notify_on_success = true,   -- show success notifications for add commands
    })
<

Notes:
- Target tmux window name equals the provider (e.g. `claude`).
- Bracketed paste is automatically enabled for certain providers that need it
  (currently `gemini`, `qwen`) and is not user-configurable.

==============================================================================
vim:tw=78:et:ft=help:norl:
